{"version":3,"sources":["components/Home.jsx","components/Game.jsx","components/End.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","props","startGame","state","name","history","push","onChange","e","setState","target","value","placeholder","onClick","this","Component","withRouter","Game","next","startOrNext","index","Computer","ComputerDeck","Player","playerDeck","ComputerPoints","PlayerPoints","addWin","endGame","addLost","style","width","height","border","display","End","anotherGame","endMessage","Games","Losses","Wins","App","newDeckOfCards","counter","i","randomLimit","randomNum","Math","floor","random","filtertDeckOfCards","filter","Message","className","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8566f06e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    startGame = () => {\r\n        if (this.state.name != '') {\r\n            this.props.startGame(this.state.name)\r\n            this.props.history.push('/Game')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <h1>ready for war</h1>\r\n\r\n                <input onChange={(e) => { this.setState({ name: e.target.value }) }} placeholder='Enter your name' /><br />\r\n\r\n                <button onClick={this.startGame}>start</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Home)","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Game extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n            index: 0,\r\n            startOrNext: 'start',\r\n            Computer: '',\r\n            Player: '',\r\n            ComputerPoints: 0,\r\n            PlayerPoints: 0\r\n        }\r\n    }\r\n\r\n    next = () => {\r\n\r\n        this.setState({ startOrNext: 'next' })\r\n\r\n        if (this.state.index < 26) {\r\n\r\n            this.setState({ Computer: this.props.ComputerDeck[this.state.index] })\r\n            this.setState({ Player: this.props.Player.playerDeck[this.state.index] })\r\n            this.setState({ index: this.state.index + 1 })\r\n\r\n            if (this.props.ComputerDeck[this.state.index] > this.props.Player.playerDeck[this.state.index]) {\r\n                this.setState({ ComputerPoints: this.state.ComputerPoints + 1 })\r\n            }\r\n            else if (this.props.ComputerDeck[this.state.index] < this.props.Player.playerDeck[this.state.index]) {\r\n                this.setState({ PlayerPoints: this.state.PlayerPoints + 1 })\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (this.state.ComputerPoints < this.state.PlayerPoints) {\r\n                this.props.addWin()\r\n                this.props.endGame('You won')\r\n            }\r\n            else {\r\n                this.props.addLost()\r\n                this.props.endGame('You lost')\r\n            }\r\n            this.props.history.push('/End')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <h1>lets play</h1>\r\n\r\n                <h3>COMPUTER</h3>\r\n                <h4>Computer Points: {this.state.ComputerPoints}</h4>\r\n                <div style={{ width: '100px', height: '100px', border: '1px solid black', display: 'inline-block' }}>\r\n                    {this.state.Computer}\r\n                </div><br />\r\n\r\n                <div style={{ width: '100px', height: '100px', border: '1px solid black', display: 'inline-block' }}>\r\n                    {this.state.Player}\r\n                </div>\r\n                <h3>YOU</h3>\r\n                <h4>Player Points: {this.state.PlayerPoints}</h4>\r\n                <button onClick={this.next}>{this.state.startOrNext}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Game)","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass End extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    anotherGame=()=>{\r\n        this.props.anotherGame()\r\n        this.props.history.push('/Game')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.endMessage}<br/>\r\n                Total games you've played: {this.props.Player.Games}<br/>\r\n                Total games you've lost: {this.props.Player.Losses}<br/>\r\n                Total games you've won: {this.props.Player.Wins}<br/>\r\n\r\n                <button onClick={this.anotherGame}>Again?</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(End)","import React, { Component } from 'react'\nimport './App.css';\nimport Home from './components/Home.jsx';\nimport Game from './components/Game.jsx';\nimport End from './components/End.jsx';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\n\nexport default class App extends Component {\n\n  state = {\n\n    Player: '',\n    ComputerDeck: '',\n    endMessage: ''\n  }\n\n  startGame = (name) => {\n\n    let newDeckOfCards = []\n    let counter = 1\n\n    for (let i = 2; i <= 14; i++) {\n\n      if (counter <= 4) {\n\n        i--\n        counter++\n\n        newDeckOfCards.push(i)\n      }\n      else {\n        counter = 1\n      }\n    }\n\n    let playerDeck = []\n\n    let randomLimit = 52\n\n    for (let i = 0; i < 26 > 0; i++) {\n\n      let randomNum = Math.floor(Math.random() * (randomLimit - 1)) + 1;\n\n      playerDeck.push(newDeckOfCards[randomNum])\n\n      let filtertDeckOfCards = newDeckOfCards.filter((e, i) => (i != randomNum))\n      newDeckOfCards = filtertDeckOfCards\n\n      randomLimit--\n    }\n\n    this.setState({ Player: { name: name, Wins: 0, Losses: 0, Games: 0, playerDeck: playerDeck } })\n    this.setState({ ComputerDeck: newDeckOfCards })\n  }\n\n  anotherGame = () => {\n\n    let newDeckOfCards = []\n    let counter = 1\n\n    for (let i = 2; i <= 14; i++) {\n\n      if (counter <= 4) {\n\n        i--\n        counter++\n\n        newDeckOfCards.push(i)\n      }\n      else {\n        counter = 1\n      }\n    }\n\n    let playerDeck = []\n\n    let randomLimit = 52\n\n    for (let i = 0; i < 26 > 0; i++) {\n\n      let randomNum = Math.floor(Math.random() * (randomLimit - 1)) + 1;\n\n      playerDeck.push(newDeckOfCards[randomNum])\n\n      let filtertDeckOfCards = newDeckOfCards.filter((e, i) => (i != randomNum))\n      newDeckOfCards = filtertDeckOfCards\n\n      randomLimit--\n    }\n\n    let Player = this.state.Player\n    Player.playerDeck = playerDeck\n    this.setState({ Player: Player, ComputerDeck: newDeckOfCards })\n  }\n\n  addWin = () => {\n\n    let Player = this.state.Player\n    Player.Wins += 1\n    Player.Games += 1\n    this.setState({ Player: Player })\n  }\n\n  addLost = () => {\n\n    let Player = this.state.Player\n    Player.Losses += 1\n    Player.Games += 1\n    this.setState({ Player: Player })\n  }\n\n  endGame = (Message) => {\n\n    this.setState({ endMessage: Message })\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path='/' component={() => { return <Home startGame={this.startGame} /> }} />\n            <Route exact path='/Game' component={() => {\n              return <Game\n                Player={this.state.Player}\n                ComputerDeck={this.state.ComputerDeck}\n                addWin={this.addWin}\n                addLost={this.addLost}\n                endGame={this.endGame}\n              />\n            }} />\n            <Route exact path='/End' component={() => {\n              return <End\n                Player={this.state.Player}\n                endMessage={this.state.endMessage}\n                anotherGame={this.anotherGame}\n              />\n            }} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}